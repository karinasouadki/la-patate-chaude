{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0","program":"/Users/kong/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","os_str_bytes","--edition=2018","/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"raw_os_str\"","-C","metadata=636d8af5887938b3","-C","extra-filename=-636d8af5887938b3","--out-dir","/Users/kong/Study/S2/Rust/group_project/la-patate-chaude/target/rls/debug/deps","-L","dependency=/Users/kong/Study/S2/Rust/group_project/la-patate-chaude/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/kong/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/kong/Study/S2/Rust/group_project/la-patate-chaude/target/rls/debug/deps/libos_str_bytes-636d8af5887938b3.rmeta"},"prelude":{"crate_id":{"name":"os_str_bytes","disambiguator":[2465008072803605776,0]},"crate_root":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src","external_crates":[{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}}],"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":0,"byte_end":13708,"line_start":1,"line_end":432,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":196},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7298,"byte_end":7305,"line_start":199,"line_end":199,"column_start":22,"column_end":29},"alias_span":null,"name":"Pattern","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7346,"byte_end":7354,"line_start":202,"line_end":202,"column_start":22,"column_end":30},"alias_span":null,"name":"RawOsStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":435},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7377,"byte_end":7388,"line_start":203,"line_end":203,"column_start":22,"column_end":33},"alias_span":null,"name":"RawOsString","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":0,"byte_end":13708,"line_start":1,"line_end":432,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":66},{"krate":0,"index":134},{"krate":0,"index":186},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":81},{"krate":0,"index":86},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101}],"decl_id":null,"docs":" This crate allows interacting with the data stored by [`OsStr`] and\n [`OsString`], without resorting to panics or corruption for invalid UTF-8.\n Thus, methods can be used that are already defined on [`[u8]`][slice] and\n [`Vec<u8>`].","sig":null,"attributes":[{"value":"/ This crate allows interacting with the data stored by [`OsStr`] and","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ [`OsString`], without resorting to panics or corruption for invalid UTF-8.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":72,"byte_end":150,"line_start":2,"line_end":2,"column_start":1,"column_end":79}},{"value":"/ Thus, methods can be used that are already defined on [`[u8]`][slice] and","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":151,"byte_end":228,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ [`Vec<u8>`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":229,"byte_end":245,"line_start":4,"line_end":4,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":246,"byte_end":249,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Typically, the only way to losslessly construct [`OsStr`] or [`OsString`]","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":250,"byte_end":327,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ from a byte sequence is to use `OsStr::new(str::from_utf8(bytes)?)`, which","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":328,"byte_end":406,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ requires the bytes to be valid in UTF-8. However, since this crate makes","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":407,"byte_end":483,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ conversions directly between the platform encoding and raw bytes, even some","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":484,"byte_end":563,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ strings invalid in UTF-8 can be converted.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":564,"byte_end":610,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":611,"byte_end":614,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ In most cases, [`RawOsStr`] and [`RawOsString`] should be used.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":615,"byte_end":682,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ [`OsStrBytes`] and [`OsStringBytes`] provide lower-level APIs that are","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":683,"byte_end":757,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ easier to misuse.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":758,"byte_end":779,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":780,"byte_end":783,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":784,"byte_end":798,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":799,"byte_end":802,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The encoding of bytes returned or accepted by methods of this crate is","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":803,"byte_end":877,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ intentionally left unspecified. It may vary for different platforms, so","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":878,"byte_end":953,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ defining it would run contrary to the goal of generic string handling.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":954,"byte_end":1028,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ However, the following invariants will always be upheld:","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1029,"byte_end":1089,"line_start":21,"line_end":21,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1090,"byte_end":1093,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - The encoding will be compatible with UTF-8. In particular, splitting an","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1094,"byte_end":1171,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/   encoded byte sequence by a UTF-8–encoded character always produces other","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1172,"byte_end":1252,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/   valid byte sequences. They can be re-encoded without error using","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1253,"byte_end":1323,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/   [`OsStrBytes::from_raw_bytes`] and similar methods.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1324,"byte_end":1381,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1382,"byte_end":1385,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ - All characters valid in platform strings are representable. [`OsStr`] and","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1386,"byte_end":1465,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/   [`OsString`] can always be losslessly reconstructed from extracted bytes.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1466,"byte_end":1545,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1546,"byte_end":1549,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that the chosen encoding may not match how Rust stores these strings","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1550,"byte_end":1627,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ internally, which is undocumented. For instance, the result of calling","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1628,"byte_end":1702,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ [`OsStr::len`] will not necessarily match the number of bytes this crate","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1703,"byte_end":1779,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ uses to represent the same string.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1780,"byte_end":1818,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1819,"byte_end":1822,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Additionally, concatenation may yield unexpected results without a UTF-8","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1823,"byte_end":1899,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ separator. If two platform strings need to be concatenated, the only safe","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1900,"byte_end":1977,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ way to do so is using [`OsString::push`]. This limitation also makes it","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":1978,"byte_end":2053,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ undesirable to use the bytes in interchange.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2054,"byte_end":2102,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2103,"byte_end":2106,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Since this encoding can change between versions and platforms, it should","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2107,"byte_end":2183,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ not be used for storage. The standard library provides implementations of","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2184,"byte_end":2261,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`OsStrExt`] and [`OsStringExt`] for various platforms, which should be","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2262,"byte_end":2337,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ preferred for that use case.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2338,"byte_end":2370,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2371,"byte_end":2374,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # User Input","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2375,"byte_end":2391,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2392,"byte_end":2395,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Traits in this crate should ideally not be used to convert byte sequences","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2396,"byte_end":2473,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ that did not originate from [`OsStr`] or a related struct. The encoding","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2474,"byte_end":2549,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ used by this crate is an implementation detail, so it does not make sense","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2550,"byte_end":2627,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ to expose it to users.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2628,"byte_end":2654,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2655,"byte_end":2658,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Crate [bstr] offers some useful alternative methods, such as","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2659,"byte_end":2723,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/ [`ByteSlice::to_os_str`] and [`ByteVec::into_os_string`], that are meant","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2724,"byte_end":2800,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ for user input. But, they reject some byte sequences used to represent","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2801,"byte_end":2875,"line_start":55,"line_end":55,"column_start":1,"column_end":75}},{"value":"/ valid platform strings, which would be undesirable for reliable path","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2876,"byte_end":2948,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/ handling. They are best used only when accepting unknown input.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":2949,"byte_end":3016,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3017,"byte_end":3020,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This crate is meant to help when you already have an instance of [`OsStr`]","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3021,"byte_end":3099,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ and need to modify the data in a lossless way.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3100,"byte_end":3150,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3151,"byte_end":3154,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3155,"byte_end":3169,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3170,"byte_end":3173,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ These features are optional and can be enabled or disabled in a","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3174,"byte_end":3241,"line_start":64,"line_end":64,"column_start":1,"column_end":68}},{"value":"/ \"Cargo.toml\" file.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3242,"byte_end":3264,"line_start":65,"line_end":65,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3265,"byte_end":3268,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ### Default Features","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3269,"byte_end":3293,"line_start":67,"line_end":67,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3294,"byte_end":3297,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ - **memchr** -","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3298,"byte_end":3316,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/   Changes the implementation to use crate [memchr] for better performance.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3317,"byte_end":3395,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/   This feature is useless when \"raw\\_os\\_str\" is disabled.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3396,"byte_end":3458,"line_start":71,"line_end":71,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3459,"byte_end":3462,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/   For more information, see [`RawOsStr`][memchr complexity].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3463,"byte_end":3527,"line_start":73,"line_end":73,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3528,"byte_end":3531,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ - **raw\\_os\\_str** -","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3532,"byte_end":3556,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/   Enables use of [`RawOsStr`] and [`RawOsString`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3557,"byte_end":3611,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3612,"byte_end":3615,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ### Optional Features","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3616,"byte_end":3641,"line_start":78,"line_end":78,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3642,"byte_end":3645,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ - **print\\_bytes** -","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3646,"byte_end":3670,"line_start":80,"line_end":80,"column_start":1,"column_end":25}},{"value":"/   Provides implementations of [`print_bytes::ToBytes`] for [`RawOsStr`] and","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3671,"byte_end":3750,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/   [`RawOsString`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3751,"byte_end":3773,"line_start":82,"line_end":82,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3774,"byte_end":3777,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ - **uniquote** -","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3778,"byte_end":3798,"line_start":84,"line_end":84,"column_start":1,"column_end":21}},{"value":"/   Provides implementations of [`uniquote::Quote`] for [`RawOsStr`] and","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3799,"byte_end":3873,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/   [`RawOsString`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3874,"byte_end":3896,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3897,"byte_end":3900,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3901,"byte_end":3921,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3922,"byte_end":3925,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Some methods return [`Cow`] to account for platform differences. However,","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":3926,"byte_end":4003,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ no guarantee is made that the same variant of that enum will always be","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4004,"byte_end":4078,"line_start":91,"line_end":91,"column_start":1,"column_end":75}},{"value":"/ returned for the same platform. Whichever can be constructed most","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4079,"byte_end":4148,"line_start":92,"line_end":92,"column_start":1,"column_end":70}},{"value":"/ efficiently will be returned.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4149,"byte_end":4182,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4183,"byte_end":4186,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ All traits are [sealed], meaning that they can only be implemented by this","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4187,"byte_end":4265,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/ crate. Otherwise, backward compatibility would be more difficult to","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4266,"byte_end":4337,"line_start":96,"line_end":96,"column_start":1,"column_end":72}},{"value":"/ maintain for new features.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4338,"byte_end":4368,"line_start":97,"line_end":97,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4369,"byte_end":4372,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Complexity","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4373,"byte_end":4389,"line_start":99,"line_end":99,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4390,"byte_end":4393,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ The time complexities of trait methods will vary based on what","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4394,"byte_end":4460,"line_start":101,"line_end":101,"column_start":1,"column_end":67}},{"value":"/ functionality is available for the platform. At worst, they will all be","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4461,"byte_end":4536,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"/ linear, but some can take constant time. For example,","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4537,"byte_end":4594,"line_start":103,"line_end":103,"column_start":1,"column_end":58}},{"value":"/ [`OsStringBytes::from_raw_vec`] might be able to reuse the allocation for","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4595,"byte_end":4672,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ its argument.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4673,"byte_end":4690,"line_start":105,"line_end":105,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4691,"byte_end":4694,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4695,"byte_end":4709,"line_start":107,"line_end":107,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4710,"byte_end":4713,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4714,"byte_end":4721,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(any())]","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4722,"byte_end":4741,"line_start":110,"line_end":110,"column_start":1,"column_end":20}},{"value":"/ use std::env;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4742,"byte_end":4759,"line_start":111,"line_end":111,"column_start":1,"column_end":18}},{"value":"/ use std::fs;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4760,"byte_end":4776,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/ # use std::io;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4777,"byte_end":4795,"line_start":113,"line_end":113,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4796,"byte_end":4799,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ use os_str_bytes::OsStrBytes;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4800,"byte_end":4833,"line_start":115,"line_end":115,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4834,"byte_end":4837,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # mod env {","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4838,"byte_end":4853,"line_start":117,"line_end":117,"column_start":1,"column_end":16}},{"value":"/ #   use std::env;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4854,"byte_end":4875,"line_start":118,"line_end":118,"column_start":1,"column_end":22}},{"value":"/ #   use std::ffi::OsString;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4876,"byte_end":4907,"line_start":119,"line_end":119,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4908,"byte_end":4913,"line_start":120,"line_end":120,"column_start":1,"column_end":6}},{"value":"/ #   pub fn args_os() -> impl Iterator<Item = OsString> {","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4914,"byte_end":4974,"line_start":121,"line_end":121,"column_start":1,"column_end":61}},{"value":"/ #       let mut file = env::temp_dir();","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":4975,"byte_end":5018,"line_start":122,"line_end":122,"column_start":1,"column_end":44}},{"value":"/ #       file.push(\"os_str_bytes\\u{E9}.txt\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5019,"byte_end":5067,"line_start":123,"line_end":123,"column_start":1,"column_end":49}},{"value":"/ #       return vec![OsString::new(), file.into_os_string()].into_iter();","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5068,"byte_end":5144,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ #   }","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5145,"byte_end":5154,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5155,"byte_end":5162,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5163,"byte_end":5168,"line_start":127,"line_end":127,"column_start":1,"column_end":6}},{"value":"/ for file in env::args_os().skip(1) {","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5169,"byte_end":5209,"line_start":128,"line_end":128,"column_start":1,"column_end":41}},{"value":"/     if file.to_raw_bytes().first() != Some(&b'-') {","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5210,"byte_end":5265,"line_start":129,"line_end":129,"column_start":1,"column_end":56}},{"value":"/         let string = \"Hello, world!\";","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5266,"byte_end":5307,"line_start":130,"line_end":130,"column_start":1,"column_end":42}},{"value":"/         fs::write(&file, string)?;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5308,"byte_end":5346,"line_start":131,"line_end":131,"column_start":1,"column_end":39}},{"value":"/         assert_eq!(string, fs::read_to_string(file)?);","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5347,"byte_end":5405,"line_start":132,"line_end":132,"column_start":1,"column_end":59}},{"value":"/     }","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5406,"byte_end":5415,"line_start":133,"line_end":133,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5416,"byte_end":5421,"line_start":134,"line_end":134,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5422,"byte_end":5427,"line_start":135,"line_end":135,"column_start":1,"column_end":6}},{"value":"/ # Ok::<_, io::Error>(())","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5428,"byte_end":5456,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5457,"byte_end":5464,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5465,"byte_end":5468,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ [bstr]: https://crates.io/crates/bstr","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5469,"byte_end":5510,"line_start":139,"line_end":139,"column_start":1,"column_end":42}},{"value":"/ [`ByteSlice::to_os_str`]: https://docs.rs/bstr/0.2.12/bstr/trait.ByteSlice.html#method.to_os_str","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5511,"byte_end":5611,"line_start":140,"line_end":140,"column_start":1,"column_end":101}},{"value":"/ [`ByteVec::into_os_string`]: https://docs.rs/bstr/0.2.12/bstr/trait.ByteVec.html#method.into_os_string","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5612,"byte_end":5718,"line_start":141,"line_end":141,"column_start":1,"column_end":107}},{"value":"/ [memchr complexity]: RawOsStr#complexity","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5719,"byte_end":5763,"line_start":142,"line_end":142,"column_start":1,"column_end":45}},{"value":"/ [memchr]: https://crates.io/crates/memchr","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5764,"byte_end":5809,"line_start":143,"line_end":143,"column_start":1,"column_end":46}},{"value":"/ [`OsStrExt`]: ::std::os::unix::ffi::OsStrExt","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5810,"byte_end":5858,"line_start":144,"line_end":144,"column_start":1,"column_end":49}},{"value":"/ [`OsStringExt`]: ::std::os::unix::ffi::OsStringExt","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5859,"byte_end":5913,"line_start":145,"line_end":145,"column_start":1,"column_end":55}},{"value":"/ [sealed]: https://rust-lang.github.io/api-guidelines/future-proofing.html#c-sealed","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":5914,"byte_end":6000,"line_start":146,"line_end":146,"column_start":1,"column_end":87}},{"value":"/ [print\\_bytes]: https://crates.io/crates/print_bytes","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":6001,"byte_end":6057,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"warn(unsafe_op_in_unsafe_fn)","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":6524,"byte_end":6556,"line_start":159,"line_end":159,"column_start":1,"column_end":33}},{"value":"warn(unused_results)","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":6557,"byte_end":6581,"line_start":160,"line_end":160,"column_start":1,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":134},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184}],"decl_id":null,"docs":" Iterators provided by this crate.\n","sig":null,"attributes":[{"value":"cfg(feature = \"raw_os_str\")","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":6875,"byte_end":6905,"line_start":176,"line_end":176,"column_start":13,"column_end":43}},{"value":"/ Iterators provided by this crate.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11048376,"byte_end":11048413,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":159},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11048992,"byte_end":11048997,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Split","qualname":"::iter::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"decl_id":null,"docs":" The iterator returned by [`RawOsStr::split`].\n","sig":null,"attributes":[{"value":"/ The iterator returned by [`RawOsStr::split`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11048931,"byte_end":11048980,"line_start":19,"line_end":19,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":394},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051064,"byte_end":11051075,"line_start":8,"line_end":8,"column_start":12,"column_end":23},"name":"EncodedChar","qualname":"::pattern::EncodedChar","value":"EncodedChar {  }","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":397}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":196},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051780,"byte_end":11051787,"line_start":36,"line_end":36,"column_start":11,"column_end":18},"name":"Pattern","qualname":"::pattern::Pattern","value":"Pattern: private::Sealed","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"decl_id":null,"docs":" Allows a type to be used for searching by [`RawOsStr`] and [`RawOsString`].","sig":null,"attributes":[{"value":"/ Allows a type to be used for searching by [`RawOsStr`] and [`RawOsString`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051344,"byte_end":11051423,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051424,"byte_end":11051427,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait is very similar to [`str::pattern::Pattern`], but its methods","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051428,"byte_end":11051504,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ are private and it is implemented for different types.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051505,"byte_end":11051563,"line_start":30,"line_end":30,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051564,"byte_end":11051567,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`RawOsStr`]: super::RawOsStr","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051568,"byte_end":11051601,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/ [`RawOsString`]: super::RawOsString","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051602,"byte_end":11051641,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/ [`str::pattern::Pattern`]: ::std::str::pattern::Pattern","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051642,"byte_end":11051701,"line_start":34,"line_end":34,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":197},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051835,"byte_end":11051844,"line_start":38,"line_end":38,"column_start":10,"column_end":19},"name":"__Encoded","qualname":"::pattern::Pattern::__Encoded","value":"type __Encoded: Clone + Encoded;","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051890,"byte_end":11051898,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"__encode","qualname":"::pattern::Pattern::__encode","value":"pub fn __encode(Self) -> Self::__Encoded","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056136,"byte_end":11056144,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"RawOsStr","qualname":"::raw_str::RawOsStr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A container for the byte strings converted by [`OsStrBytes`].","sig":null,"attributes":[{"value":"/ A container for the byte strings converted by [`OsStrBytes`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11054518,"byte_end":11054583,"line_start":83,"line_end":83,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11054584,"byte_end":11054587,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This wrapper is intended to prevent violating the invariants of the","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11054588,"byte_end":11054659,"line_start":85,"line_end":85,"column_start":1,"column_end":72}},{"value":"/ [unspecified encoding] used by this crate and minimize encoding","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11054660,"byte_end":11054727,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/ conversions.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11054728,"byte_end":11054744,"line_start":87,"line_end":87,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11054745,"byte_end":11054748,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Although this type is annotated with `#[repr(transparent)]`, the inner","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11054749,"byte_end":11054823,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ representation is not stable. Transmuting between this type and any other","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11054824,"byte_end":11054901,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ causes immediate undefined behavior.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11054902,"byte_end":11054942,"line_start":91,"line_end":91,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11054943,"byte_end":11054946,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11054947,"byte_end":11054960,"line_start":93,"line_end":93,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11054961,"byte_end":11054964,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Methods of this struct that accept indices require that the index lie on a","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11054965,"byte_end":11055043,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/ UTF-8 boundary. Although it is possible to manipulate platform strings","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055044,"byte_end":11055118,"line_start":96,"line_end":96,"column_start":1,"column_end":75}},{"value":"/ based on other indices, this crate currently does not support them for","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055119,"byte_end":11055193,"line_start":97,"line_end":97,"column_start":1,"column_end":75}},{"value":"/ slicing methods. They would add significant complication to the","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055194,"byte_end":11055261,"line_start":98,"line_end":98,"column_start":1,"column_end":68}},{"value":"/ implementation and are generally not necessary. However, all indices","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055262,"byte_end":11055334,"line_start":99,"line_end":99,"column_start":1,"column_end":73}},{"value":"/ returned by this struct can be used for slicing.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055335,"byte_end":11055387,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055388,"byte_end":11055391,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ On Unix, all indices are permitted, to avoid false positives. However,","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055392,"byte_end":11055466,"line_start":102,"line_end":102,"column_start":1,"column_end":75}},{"value":"/ relying on this implementation detail is discouraged. Platform-specific","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055467,"byte_end":11055542,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ indices are error-prone.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055543,"byte_end":11055571,"line_start":104,"line_end":104,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055572,"byte_end":11055575,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Complexity","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055576,"byte_end":11055592,"line_start":106,"line_end":106,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055593,"byte_end":11055596,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ All searching methods have worst-case multiplicative time complexity (i.e.,","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055597,"byte_end":11055676,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ `O(self.raw_len() * pat.len())`). Enabling the \"memchr\" feature allows","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055677,"byte_end":11055751,"line_start":109,"line_end":109,"column_start":1,"column_end":75}},{"value":"/ these methods to instead run in linear time in the worst case (documented","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055752,"byte_end":11055829,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ for [`memchr::memmem::find`][memchr complexity]).","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055830,"byte_end":11055883,"line_start":111,"line_end":111,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055884,"byte_end":11055887,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ [memchr complexity]: memchr::memmem::find#complexity","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055888,"byte_end":11055944,"line_start":113,"line_end":113,"column_start":1,"column_end":57}},{"value":"/ [unspecified encoding]: super#encoding","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11055945,"byte_end":11055987,"line_start":114,"line_end":114,"column_start":1,"column_end":43}},{"value":"repr(transparent)","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056104,"byte_end":11056124,"line_start":117,"line_end":117,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057093,"byte_end":11057096,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"new","qualname":"<RawOsStr>::new","value":"pub fn new(&OsStr) -> Cow<, Self>","parent":null,"children":[],"decl_id":null,"docs":" Converts a platform-native string into a representation that can be\n more easily manipulated.","sig":null,"attributes":[{"value":"/ Converts a platform-native string into a representation that can be","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056356,"byte_end":11056427,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ more easily manipulated.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056432,"byte_end":11056460,"line_start":127,"line_end":127,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056465,"byte_end":11056468,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method performs the necessary conversion immediately, so it can be","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056473,"byte_end":11056548,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ expensive to call. It is recommended to continue using the returned","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056553,"byte_end":11056624,"line_start":130,"line_end":130,"column_start":5,"column_end":76}},{"value":"/ instance as long as possible (instead of the original [`OsStr`]), to","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056629,"byte_end":11056701,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ avoid repeated conversions.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056706,"byte_end":11056737,"line_start":132,"line_end":132,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056742,"byte_end":11056745,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056750,"byte_end":11056764,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056769,"byte_end":11056772,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056777,"byte_end":11056784,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use std::env;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056789,"byte_end":11056806,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ # use std::io;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056811,"byte_end":11056829,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056834,"byte_end":11056837,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056842,"byte_end":11056873,"line_start":140,"line_end":140,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056878,"byte_end":11056881,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let os_string = env::current_exe()?.into_os_string();","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056886,"byte_end":11056943,"line_start":142,"line_end":142,"column_start":5,"column_end":62}},{"value":"/ println!(\"{:?}\", RawOsStr::new(&os_string));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056948,"byte_end":11056996,"line_start":143,"line_end":143,"column_start":5,"column_end":53}},{"value":"/ #","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057001,"byte_end":11057006,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ # Ok::<_, io::Error>(())","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057011,"byte_end":11057039,"line_start":145,"line_end":145,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057044,"byte_end":11057051,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057056,"byte_end":11057065,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057070,"byte_end":11057081,"line_start":148,"line_end":148,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057932,"byte_end":11057940,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"from_str","qualname":"<RawOsStr>::from_str","value":"pub fn from_str(&str) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps a string, without copying or encoding conversion.","sig":null,"attributes":[{"value":"/ Wraps a string, without copying or encoding conversion.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057381,"byte_end":11057440,"line_start":158,"line_end":158,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057445,"byte_end":11057448,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This method is much more efficient than [`RawOsStr::new`], since the","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057453,"byte_end":11057525,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ [encoding] used by this crate is compatible with UTF-8.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057530,"byte_end":11057589,"line_start":161,"line_end":161,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057594,"byte_end":11057597,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057602,"byte_end":11057616,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057621,"byte_end":11057624,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057629,"byte_end":11057636,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057641,"byte_end":11057672,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057677,"byte_end":11057680,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let string = \"foobar\";","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057685,"byte_end":11057711,"line_start":168,"line_end":168,"column_start":5,"column_end":31}},{"value":"/ let raw = RawOsStr::from_str(string);","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057716,"byte_end":11057757,"line_start":169,"line_end":169,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(string, raw);","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057762,"byte_end":11057790,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057795,"byte_end":11057802,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057807,"byte_end":11057810,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ [encoding]: super#encoding","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057815,"byte_end":11057845,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057850,"byte_end":11057890,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057895,"byte_end":11057904,"line_start":175,"line_end":175,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11057909,"byte_end":11057920,"line_start":176,"line_end":176,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058662,"byte_end":11058674,"line_start":203,"line_end":203,"column_start":12,"column_end":24},"name":"as_raw_bytes","qualname":"<RawOsStr>::as_raw_bytes","value":"pub fn as_raw_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte string stored by this container.","sig":null,"attributes":[{"value":"/ Returns the byte string stored by this container.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058035,"byte_end":11058088,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058093,"byte_end":11058096,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The result will match what would be returned by","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058101,"byte_end":11058152,"line_start":183,"line_end":183,"column_start":5,"column_end":56}},{"value":"/ [`OsStrBytes::to_raw_bytes`] for the same string.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058157,"byte_end":11058210,"line_start":184,"line_end":184,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058215,"byte_end":11058218,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058223,"byte_end":11058237,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058242,"byte_end":11058245,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058250,"byte_end":11058257,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use std::env;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058262,"byte_end":11058279,"line_start":189,"line_end":189,"column_start":5,"column_end":22}},{"value":"/ # use std::io;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058284,"byte_end":11058302,"line_start":190,"line_end":190,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058307,"byte_end":11058310,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ use os_str_bytes::OsStrBytes;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058315,"byte_end":11058348,"line_start":192,"line_end":192,"column_start":5,"column_end":38}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058353,"byte_end":11058384,"line_start":193,"line_end":193,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058389,"byte_end":11058392,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let os_string = env::current_exe()?.into_os_string();","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058397,"byte_end":11058454,"line_start":195,"line_end":195,"column_start":5,"column_end":62}},{"value":"/ let raw = RawOsStr::new(&os_string);","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058459,"byte_end":11058499,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(os_string.to_raw_bytes(), raw.as_raw_bytes());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058504,"byte_end":11058565,"line_start":197,"line_end":197,"column_start":5,"column_end":66}},{"value":"/ #","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058570,"byte_end":11058575,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ # Ok::<_, io::Error>(())","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058580,"byte_end":11058608,"line_start":199,"line_end":199,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058613,"byte_end":11058620,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058625,"byte_end":11058634,"line_start":201,"line_end":201,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058639,"byte_end":11058650,"line_start":202,"line_end":202,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059125,"byte_end":11059133,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"contains","qualname":"<RawOsStr>::contains","value":"pub fn contains<P>(&Self, P) -> bool where P: Pattern","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::contains`].","sig":null,"attributes":[{"value":"/ Equivalent to [`str::contains`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058720,"byte_end":11058756,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058761,"byte_end":11058764,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058769,"byte_end":11058781,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058786,"byte_end":11058789,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Panics if the pattern is a byte outside of the ASCII range.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058794,"byte_end":11058857,"line_start":211,"line_end":211,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058862,"byte_end":11058865,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058870,"byte_end":11058884,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058889,"byte_end":11058892,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058897,"byte_end":11058904,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058909,"byte_end":11058940,"line_start":216,"line_end":216,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058945,"byte_end":11058948,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"foobar\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11058953,"byte_end":11058996,"line_start":218,"line_end":218,"column_start":5,"column_end":48}},{"value":"/ assert!(raw.contains(\"oo\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059001,"byte_end":11059033,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/ assert!(!raw.contains(\"of\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059038,"byte_end":11059071,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059076,"byte_end":11059083,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059088,"byte_end":11059097,"line_start":222,"line_end":222,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059102,"byte_end":11059113,"line_start":223,"line_end":223,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059650,"byte_end":11059659,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<RawOsStr>::ends_with","value":"pub fn ends_with<P>(&Self, P) -> bool where P: Pattern","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::ends_with`].","sig":null,"attributes":[{"value":"/ Equivalent to [`str::ends_with`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059240,"byte_end":11059277,"line_start":231,"line_end":231,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059282,"byte_end":11059285,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059290,"byte_end":11059302,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059307,"byte_end":11059310,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Panics if the pattern is a byte outside of the ASCII range.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059315,"byte_end":11059378,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059383,"byte_end":11059386,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059391,"byte_end":11059405,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059410,"byte_end":11059413,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059418,"byte_end":11059425,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059430,"byte_end":11059461,"line_start":240,"line_end":240,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059466,"byte_end":11059469,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"foobar\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059474,"byte_end":11059517,"line_start":242,"line_end":242,"column_start":5,"column_end":48}},{"value":"/ assert!(raw.ends_with(\"bar\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059522,"byte_end":11059556,"line_start":243,"line_end":243,"column_start":5,"column_end":39}},{"value":"/ assert!(!raw.ends_with(\"foo\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059561,"byte_end":11059596,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059601,"byte_end":11059608,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059613,"byte_end":11059622,"line_start":246,"line_end":246,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059627,"byte_end":11059638,"line_start":247,"line_end":247,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060323,"byte_end":11060335,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"ends_with_os","qualname":"<RawOsStr>::ends_with_os","value":"pub fn ends_with_os(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::ends_with`] but accepts this type for the pattern.","sig":null,"attributes":[{"value":"/ Equivalent to [`str::ends_with`] but accepts this type for the pattern.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059829,"byte_end":11059904,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059909,"byte_end":11059912,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059917,"byte_end":11059929,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059934,"byte_end":11059937,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Panics if the pattern is a byte outside of the ASCII range.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11059942,"byte_end":11060005,"line_start":262,"line_end":262,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060010,"byte_end":11060013,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060018,"byte_end":11060032,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060037,"byte_end":11060040,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060045,"byte_end":11060052,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060057,"byte_end":11060088,"line_start":267,"line_end":267,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060093,"byte_end":11060096,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"foobar\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060101,"byte_end":11060144,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/ assert!(raw.ends_with_os(RawOsStr::from_str(\"bar\")));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060149,"byte_end":11060206,"line_start":270,"line_end":270,"column_start":5,"column_end":62}},{"value":"/ assert!(!raw.ends_with_os(RawOsStr::from_str(\"foo\")));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060211,"byte_end":11060269,"line_start":271,"line_end":271,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060274,"byte_end":11060281,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060286,"byte_end":11060295,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060300,"byte_end":11060311,"line_start":274,"line_end":274,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060828,"byte_end":11060832,"line_start":296,"line_end":296,"column_start":12,"column_end":16},"name":"find","qualname":"<RawOsStr>::find","value":"pub fn find<P>(&Self, P) -> Option<usize> where P: Pattern","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::find`].","sig":null,"attributes":[{"value":"/ Equivalent to [`str::find`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060416,"byte_end":11060448,"line_start":279,"line_end":279,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060453,"byte_end":11060456,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060461,"byte_end":11060473,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060478,"byte_end":11060481,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Panics if the pattern is a byte outside of the ASCII range.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060486,"byte_end":11060549,"line_start":283,"line_end":283,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060554,"byte_end":11060557,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060562,"byte_end":11060576,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060581,"byte_end":11060584,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060589,"byte_end":11060596,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060601,"byte_end":11060632,"line_start":288,"line_end":288,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060637,"byte_end":11060640,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"foobar\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060645,"byte_end":11060688,"line_start":290,"line_end":290,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), raw.find(\"o\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060693,"byte_end":11060732,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(None, raw.find(\"of\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060737,"byte_end":11060774,"line_start":292,"line_end":292,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060779,"byte_end":11060786,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060791,"byte_end":11060800,"line_start":294,"line_end":294,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11060805,"byte_end":11060816,"line_start":295,"line_end":295,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061300,"byte_end":11061308,"line_start":318,"line_end":318,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<RawOsStr>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::is_empty`].","sig":null,"attributes":[{"value":"/ Equivalent to [`str::is_empty`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061008,"byte_end":11061044,"line_start":306,"line_end":306,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061049,"byte_end":11061052,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061057,"byte_end":11061071,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061076,"byte_end":11061079,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061084,"byte_end":11061091,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061096,"byte_end":11061127,"line_start":311,"line_end":311,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061132,"byte_end":11061135,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ assert!(RawOsStr::from_str(\"\").is_empty());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061140,"byte_end":11061187,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/ assert!(!RawOsStr::from_str(\"foobar\").is_empty());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061192,"byte_end":11061246,"line_start":314,"line_end":314,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061251,"byte_end":11061258,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061263,"byte_end":11061272,"line_start":316,"line_end":316,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061277,"byte_end":11061288,"line_start":317,"line_end":317,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062215,"byte_end":11062222,"line_start":344,"line_end":344,"column_start":12,"column_end":19},"name":"raw_len","qualname":"<RawOsStr>::raw_len","value":"pub fn raw_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the byte string stored by this container.","sig":null,"attributes":[{"value":"/ Returns the length of the byte string stored by this container.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061363,"byte_end":11061430,"line_start":322,"line_end":322,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061435,"byte_end":11061438,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Only the following assumptions can be made about the result:","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061443,"byte_end":11061507,"line_start":324,"line_end":324,"column_start":5,"column_end":69}},{"value":"/ - The length of any Unicode character is the length of its UTF-8","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061512,"byte_end":11061580,"line_start":325,"line_end":325,"column_start":5,"column_end":73}},{"value":"/   representation (i.e., [`char::len_utf8`]).","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061585,"byte_end":11061633,"line_start":326,"line_end":326,"column_start":5,"column_end":53}},{"value":"/ - Splitting a string at a UTF-8 boundary will return two strings with","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061638,"byte_end":11061711,"line_start":327,"line_end":327,"column_start":5,"column_end":78}},{"value":"/   lengths that sum to the length of the original string.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061716,"byte_end":11061776,"line_start":328,"line_end":328,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061781,"byte_end":11061784,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ This method may return a different result than would [`OsStr::len`]","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061789,"byte_end":11061860,"line_start":330,"line_end":330,"column_start":5,"column_end":76}},{"value":"/ when called on same string, since [`OsStr`] uses an unspecified","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061865,"byte_end":11061932,"line_start":331,"line_end":331,"column_start":5,"column_end":72}},{"value":"/ encoding.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061937,"byte_end":11061950,"line_start":332,"line_end":332,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061955,"byte_end":11061958,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061963,"byte_end":11061977,"line_start":334,"line_end":334,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061982,"byte_end":11061985,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11061990,"byte_end":11061997,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062002,"byte_end":11062033,"line_start":337,"line_end":337,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062038,"byte_end":11062041,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, RawOsStr::from_str(\"foobar\").raw_len());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062046,"byte_end":11062104,"line_start":339,"line_end":339,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(0, RawOsStr::from_str(\"\").raw_len());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062109,"byte_end":11062161,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062166,"byte_end":11062173,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062178,"byte_end":11062187,"line_start":342,"line_end":342,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062192,"byte_end":11062203,"line_start":343,"line_end":343,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062688,"byte_end":11062693,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"name":"rfind","qualname":"<RawOsStr>::rfind","value":"pub fn rfind<P>(&Self, P) -> Option<usize> where P: Pattern","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::rfind`].","sig":null,"attributes":[{"value":"/ Equivalent to [`str::rfind`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062273,"byte_end":11062306,"line_start":348,"line_end":348,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062311,"byte_end":11062314,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062319,"byte_end":11062331,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062336,"byte_end":11062339,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Panics if the pattern is a byte outside of the ASCII range.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062344,"byte_end":11062407,"line_start":352,"line_end":352,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062412,"byte_end":11062415,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062420,"byte_end":11062434,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062439,"byte_end":11062442,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062447,"byte_end":11062454,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062459,"byte_end":11062490,"line_start":357,"line_end":357,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062495,"byte_end":11062498,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"foobar\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062503,"byte_end":11062546,"line_start":359,"line_end":359,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(2), raw.rfind(\"o\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062551,"byte_end":11062591,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(None, raw.rfind(\"of\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062596,"byte_end":11062634,"line_start":361,"line_end":361,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062639,"byte_end":11062646,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062651,"byte_end":11062660,"line_start":363,"line_end":363,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11062665,"byte_end":11062676,"line_start":364,"line_end":364,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063566,"byte_end":11063577,"line_start":402,"line_end":402,"column_start":12,"column_end":23},"name":"rsplit_once","qualname":"<RawOsStr>::rsplit_once","value":"pub fn rsplit_once<P>(&Self, P) -> Option<(&Self, &Self)> where P: Pattern","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::rsplit_once`].","sig":null,"attributes":[{"value":"/ Equivalent to [`str::rsplit_once`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063046,"byte_end":11063085,"line_start":382,"line_end":382,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063090,"byte_end":11063093,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063098,"byte_end":11063110,"line_start":384,"line_end":384,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063115,"byte_end":11063118,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Panics if the pattern is a byte outside of the ASCII range.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063123,"byte_end":11063186,"line_start":386,"line_end":386,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063191,"byte_end":11063194,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063199,"byte_end":11063213,"line_start":388,"line_end":388,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063218,"byte_end":11063221,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063226,"byte_end":11063233,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063238,"byte_end":11063269,"line_start":391,"line_end":391,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063274,"byte_end":11063277,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"foobar\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063282,"byte_end":11063325,"line_start":393,"line_end":393,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063330,"byte_end":11063345,"line_start":394,"line_end":394,"column_start":5,"column_end":20}},{"value":"/     Some((RawOsStr::from_str(\"fo\"), RawOsStr::from_str(\"bar\"))),","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063350,"byte_end":11063418,"line_start":395,"line_end":395,"column_start":5,"column_end":73}},{"value":"/     raw.rsplit_once(\"o\"),","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063423,"byte_end":11063452,"line_start":396,"line_end":396,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063457,"byte_end":11063463,"line_start":397,"line_end":397,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(None, raw.rsplit_once(\"of\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063468,"byte_end":11063512,"line_start":398,"line_end":398,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063517,"byte_end":11063524,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063529,"byte_end":11063538,"line_start":400,"line_end":400,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11063543,"byte_end":11063554,"line_start":401,"line_end":401,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065284,"byte_end":11065289,"line_start":458,"line_end":458,"column_start":12,"column_end":17},"name":"split","qualname":"<RawOsStr>::split","value":"pub fn split<P>(&Self, P) -> Split<, P> where P: Pattern","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::split`], but empty patterns are not accepted.","sig":null,"attributes":[{"value":"/ Equivalent to [`str::split`], but empty patterns are not accepted.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11064836,"byte_end":11064906,"line_start":442,"line_end":442,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11064911,"byte_end":11064914,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11064919,"byte_end":11064931,"line_start":444,"line_end":444,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11064936,"byte_end":11064939,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Panics if the pattern is a byte outside of the ASCII range or empty.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11064944,"byte_end":11065016,"line_start":446,"line_end":446,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065021,"byte_end":11065024,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065029,"byte_end":11065043,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065048,"byte_end":11065051,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065056,"byte_end":11065063,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065068,"byte_end":11065099,"line_start":451,"line_end":451,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065104,"byte_end":11065107,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"foobar\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065112,"byte_end":11065155,"line_start":453,"line_end":453,"column_start":5,"column_end":48}},{"value":"/ assert_eq!([\"f\", \"\", \"bar\"], *raw.split(\"o\").collect::<Vec<_>>());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065160,"byte_end":11065230,"line_start":454,"line_end":454,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065235,"byte_end":11065242,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065247,"byte_end":11065256,"line_start":456,"line_end":456,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065261,"byte_end":11065272,"line_start":457,"line_end":457,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065891,"byte_end":11065899,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"split_at","qualname":"<RawOsStr>::split_at","value":"pub fn split_at(&Self, usize) -> (&Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::split_at`].","sig":null,"attributes":[{"value":"/ Equivalent to [`str::split_at`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065401,"byte_end":11065437,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065442,"byte_end":11065445,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065450,"byte_end":11065462,"line_start":467,"line_end":467,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065467,"byte_end":11065470,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is not a [valid boundary].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065475,"byte_end":11065525,"line_start":469,"line_end":469,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065530,"byte_end":11065533,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065538,"byte_end":11065552,"line_start":471,"line_end":471,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065557,"byte_end":11065560,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065565,"byte_end":11065572,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065577,"byte_end":11065608,"line_start":474,"line_end":474,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065613,"byte_end":11065616,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"foobar\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065621,"byte_end":11065664,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065669,"byte_end":11065684,"line_start":477,"line_end":477,"column_start":5,"column_end":20}},{"value":"/     ((RawOsStr::from_str(\"fo\"), RawOsStr::from_str(\"obar\"))),","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065689,"byte_end":11065754,"line_start":478,"line_end":478,"column_start":5,"column_end":70}},{"value":"/     raw.split_at(2),","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065759,"byte_end":11065783,"line_start":479,"line_end":479,"column_start":5,"column_end":29}},{"value":"/ );","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065788,"byte_end":11065794,"line_start":480,"line_end":480,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065799,"byte_end":11065806,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065811,"byte_end":11065814,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ [valid boundary]: #indices","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065819,"byte_end":11065849,"line_start":483,"line_end":483,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065854,"byte_end":11065863,"line_start":484,"line_end":484,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11065868,"byte_end":11065879,"line_start":485,"line_end":485,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066850,"byte_end":11066860,"line_start":523,"line_end":523,"column_start":12,"column_end":22},"name":"split_once","qualname":"<RawOsStr>::split_once","value":"pub fn split_once<P>(&Self, P) -> Option<(&Self, &Self)> where P: Pattern","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::split_once`].","sig":null,"attributes":[{"value":"/ Equivalent to [`str::split_once`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066333,"byte_end":11066371,"line_start":503,"line_end":503,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066376,"byte_end":11066379,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066384,"byte_end":11066396,"line_start":505,"line_end":505,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066401,"byte_end":11066404,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ Panics if the pattern is a byte outside of the ASCII range.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066409,"byte_end":11066472,"line_start":507,"line_end":507,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066477,"byte_end":11066480,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066485,"byte_end":11066499,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066504,"byte_end":11066507,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066512,"byte_end":11066519,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066524,"byte_end":11066555,"line_start":512,"line_end":512,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066560,"byte_end":11066563,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"foobar\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066568,"byte_end":11066611,"line_start":514,"line_end":514,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066616,"byte_end":11066631,"line_start":515,"line_end":515,"column_start":5,"column_end":20}},{"value":"/     Some((RawOsStr::from_str(\"f\"), RawOsStr::from_str(\"obar\"))),","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066636,"byte_end":11066704,"line_start":516,"line_end":516,"column_start":5,"column_end":73}},{"value":"/     raw.split_once(\"o\"),","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066709,"byte_end":11066737,"line_start":517,"line_end":517,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066742,"byte_end":11066748,"line_start":518,"line_end":518,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(None, raw.split_once(\"of\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066753,"byte_end":11066796,"line_start":519,"line_end":519,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066801,"byte_end":11066808,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066813,"byte_end":11066822,"line_start":521,"line_end":521,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066827,"byte_end":11066838,"line_start":522,"line_end":522,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067413,"byte_end":11067424,"line_start":547,"line_end":547,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<RawOsStr>::starts_with","value":"pub fn starts_with<P>(&Self, P) -> bool where P: Pattern","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::starts_with`].","sig":null,"attributes":[{"value":"/ Equivalent to [`str::starts_with`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11066997,"byte_end":11067036,"line_start":530,"line_end":530,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067041,"byte_end":11067044,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067049,"byte_end":11067061,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067066,"byte_end":11067069,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ Panics if the pattern is a byte outside of the ASCII range.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067074,"byte_end":11067137,"line_start":534,"line_end":534,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067142,"byte_end":11067145,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067150,"byte_end":11067164,"line_start":536,"line_end":536,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067169,"byte_end":11067172,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067177,"byte_end":11067184,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067189,"byte_end":11067220,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067225,"byte_end":11067228,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"foobar\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067233,"byte_end":11067276,"line_start":541,"line_end":541,"column_start":5,"column_end":48}},{"value":"/ assert!(raw.starts_with(\"foo\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067281,"byte_end":11067317,"line_start":542,"line_end":542,"column_start":5,"column_end":41}},{"value":"/ assert!(!raw.starts_with(\"bar\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067322,"byte_end":11067359,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067364,"byte_end":11067371,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067376,"byte_end":11067385,"line_start":545,"line_end":545,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067390,"byte_end":11067401,"line_start":546,"line_end":546,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068104,"byte_end":11068118,"line_start":575,"line_end":575,"column_start":12,"column_end":26},"name":"starts_with_os","qualname":"<RawOsStr>::starts_with_os","value":"pub fn starts_with_os(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::starts_with`] but accepts this type for the\n pattern.","sig":null,"attributes":[{"value":"/ Equivalent to [`str::starts_with`] but accepts this type for the","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067596,"byte_end":11067664,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/ pattern.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067669,"byte_end":11067681,"line_start":558,"line_end":558,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067686,"byte_end":11067689,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067694,"byte_end":11067706,"line_start":560,"line_end":560,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067711,"byte_end":11067714,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ Panics if the pattern is a byte outside of the ASCII range.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067719,"byte_end":11067782,"line_start":562,"line_end":562,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067787,"byte_end":11067790,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067795,"byte_end":11067809,"line_start":564,"line_end":564,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067814,"byte_end":11067817,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067822,"byte_end":11067829,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067834,"byte_end":11067865,"line_start":567,"line_end":567,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067870,"byte_end":11067873,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"foobar\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067878,"byte_end":11067921,"line_start":569,"line_end":569,"column_start":5,"column_end":48}},{"value":"/ assert!(raw.starts_with_os(RawOsStr::from_str(\"foo\")));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067926,"byte_end":11067985,"line_start":570,"line_end":570,"column_start":5,"column_end":64}},{"value":"/ assert!(!raw.starts_with_os(RawOsStr::from_str(\"bar\")));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11067990,"byte_end":11068050,"line_start":571,"line_end":571,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068055,"byte_end":11068062,"line_start":572,"line_end":572,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068067,"byte_end":11068076,"line_start":573,"line_end":573,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068081,"byte_end":11068092,"line_start":574,"line_end":574,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068711,"byte_end":11068723,"line_start":599,"line_end":599,"column_start":12,"column_end":24},"name":"strip_prefix","qualname":"<RawOsStr>::strip_prefix","value":"pub fn strip_prefix<P>(&Self, P) -> Option<&Self> where P: Pattern","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::strip_prefix`].","sig":null,"attributes":[{"value":"/ Equivalent to [`str::strip_prefix`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068201,"byte_end":11068241,"line_start":579,"line_end":579,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068246,"byte_end":11068249,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068254,"byte_end":11068266,"line_start":581,"line_end":581,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068271,"byte_end":11068274,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Panics if the pattern is a byte outside of the ASCII range.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068279,"byte_end":11068342,"line_start":583,"line_end":583,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068347,"byte_end":11068350,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068355,"byte_end":11068369,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068374,"byte_end":11068377,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068382,"byte_end":11068389,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068394,"byte_end":11068425,"line_start":588,"line_end":588,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068430,"byte_end":11068433,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"111foo1bar111\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068438,"byte_end":11068488,"line_start":590,"line_end":590,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068493,"byte_end":11068508,"line_start":591,"line_end":591,"column_start":5,"column_end":20}},{"value":"/     Some(RawOsStr::from_str(\"11foo1bar111\")),","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068513,"byte_end":11068562,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/     raw.strip_prefix(\"1\"),","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068567,"byte_end":11068597,"line_start":593,"line_end":593,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068602,"byte_end":11068608,"line_start":594,"line_end":594,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(None, raw.strip_prefix(\"o\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068613,"byte_end":11068657,"line_start":595,"line_end":595,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068662,"byte_end":11068669,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068674,"byte_end":11068683,"line_start":597,"line_end":597,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068688,"byte_end":11068699,"line_start":598,"line_end":598,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069451,"byte_end":11069463,"line_start":629,"line_end":629,"column_start":12,"column_end":24},"name":"strip_suffix","qualname":"<RawOsStr>::strip_suffix","value":"pub fn strip_suffix<P>(&Self, P) -> Option<&Self> where P: Pattern","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::strip_suffix`].","sig":null,"attributes":[{"value":"/ Equivalent to [`str::strip_suffix`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068941,"byte_end":11068981,"line_start":609,"line_end":609,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068986,"byte_end":11068989,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11068994,"byte_end":11069006,"line_start":611,"line_end":611,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069011,"byte_end":11069014,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ Panics if the pattern is a byte outside of the ASCII range.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069019,"byte_end":11069082,"line_start":613,"line_end":613,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069087,"byte_end":11069090,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069095,"byte_end":11069109,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069114,"byte_end":11069117,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069122,"byte_end":11069129,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069134,"byte_end":11069165,"line_start":618,"line_end":618,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069170,"byte_end":11069173,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"111foo1bar111\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069178,"byte_end":11069228,"line_start":620,"line_end":620,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069233,"byte_end":11069248,"line_start":621,"line_end":621,"column_start":5,"column_end":20}},{"value":"/     Some(RawOsStr::from_str(\"111foo1bar11\")),","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069253,"byte_end":11069302,"line_start":622,"line_end":622,"column_start":5,"column_end":54}},{"value":"/     raw.strip_suffix(\"1\"),","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069307,"byte_end":11069337,"line_start":623,"line_end":623,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069342,"byte_end":11069348,"line_start":624,"line_end":624,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(None, raw.strip_suffix(\"o\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069353,"byte_end":11069397,"line_start":625,"line_end":625,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069402,"byte_end":11069409,"line_start":626,"line_end":626,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069414,"byte_end":11069423,"line_start":627,"line_end":627,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069428,"byte_end":11069439,"line_start":628,"line_end":628,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070143,"byte_end":11070152,"line_start":657,"line_end":657,"column_start":12,"column_end":21},"name":"to_os_str","qualname":"<RawOsStr>::to_os_str","value":"pub fn to_os_str(&Self) -> Cow<, OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Converts this representation back to a platform-native string.","sig":null,"attributes":[{"value":"/ Converts this representation back to a platform-native string.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069681,"byte_end":11069747,"line_start":639,"line_end":639,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069752,"byte_end":11069755,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069760,"byte_end":11069774,"line_start":641,"line_end":641,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069779,"byte_end":11069782,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069787,"byte_end":11069794,"line_start":643,"line_end":643,"column_start":5,"column_end":12}},{"value":"/ use std::env;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069799,"byte_end":11069816,"line_start":644,"line_end":644,"column_start":5,"column_end":22}},{"value":"/ # use std::io;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069821,"byte_end":11069839,"line_start":645,"line_end":645,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069844,"byte_end":11069847,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069852,"byte_end":11069883,"line_start":647,"line_end":647,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069888,"byte_end":11069891,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ let os_string = env::current_exe()?.into_os_string();","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069896,"byte_end":11069953,"line_start":649,"line_end":649,"column_start":5,"column_end":62}},{"value":"/ let raw = RawOsStr::new(&os_string);","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11069958,"byte_end":11069998,"line_start":650,"line_end":650,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(os_string, raw.to_os_str());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070003,"byte_end":11070046,"line_start":651,"line_end":651,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070051,"byte_end":11070056,"line_start":652,"line_end":652,"column_start":5,"column_end":10}},{"value":"/ # Ok::<_, io::Error>(())","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070061,"byte_end":11070089,"line_start":653,"line_end":653,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070094,"byte_end":11070101,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070106,"byte_end":11070115,"line_start":655,"line_end":655,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070120,"byte_end":11070131,"line_start":656,"line_end":656,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070564,"byte_end":11070570,"line_start":674,"line_end":674,"column_start":12,"column_end":18},"name":"to_str","qualname":"<RawOsStr>::to_str","value":"pub fn to_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`OsStr::to_str`].","sig":null,"attributes":[{"value":"/ Equivalent to [`OsStr::to_str`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070258,"byte_end":11070294,"line_start":661,"line_end":661,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070299,"byte_end":11070302,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070307,"byte_end":11070321,"line_start":663,"line_end":663,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070326,"byte_end":11070329,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070334,"byte_end":11070341,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070346,"byte_end":11070377,"line_start":666,"line_end":666,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070382,"byte_end":11070385,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let string = \"foobar\";","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070390,"byte_end":11070416,"line_start":668,"line_end":668,"column_start":5,"column_end":31}},{"value":"/ let raw = RawOsStr::from_str(string);","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070421,"byte_end":11070462,"line_start":669,"line_end":669,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(Some(string), raw.to_str());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070467,"byte_end":11070510,"line_start":670,"line_end":670,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070515,"byte_end":11070522,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070527,"byte_end":11070536,"line_start":672,"line_end":672,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070541,"byte_end":11070552,"line_start":673,"line_end":673,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071386,"byte_end":11071398,"line_start":703,"line_end":703,"column_start":12,"column_end":24},"name":"to_str_lossy","qualname":"<RawOsStr>::to_str_lossy","value":"pub fn to_str_lossy(&Self) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts this string to the best UTF-8 representation possible.","sig":null,"attributes":[{"value":"/ Converts this string to the best UTF-8 representation possible.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070644,"byte_end":11070711,"line_start":678,"line_end":678,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070716,"byte_end":11070719,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ Invalid sequences will be replaced with","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070724,"byte_end":11070767,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"/ [`char::REPLACEMENT_CHARACTER`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070772,"byte_end":11070808,"line_start":681,"line_end":681,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070813,"byte_end":11070816,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ This method may return a different result than would","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070821,"byte_end":11070877,"line_start":683,"line_end":683,"column_start":5,"column_end":61}},{"value":"/ [`OsStr::to_string_lossy`] when called on same string, since [`OsStr`]","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070882,"byte_end":11070956,"line_start":684,"line_end":684,"column_start":5,"column_end":79}},{"value":"/ uses an unspecified encoding.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070961,"byte_end":11070994,"line_start":685,"line_end":685,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11070999,"byte_end":11071002,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071007,"byte_end":11071021,"line_start":687,"line_end":687,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071026,"byte_end":11071029,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071034,"byte_end":11071041,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ use std::env;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071046,"byte_end":11071063,"line_start":690,"line_end":690,"column_start":5,"column_end":22}},{"value":"/ # use std::io;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071068,"byte_end":11071086,"line_start":691,"line_end":691,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071091,"byte_end":11071094,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071099,"byte_end":11071130,"line_start":693,"line_end":693,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071135,"byte_end":11071138,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ let os_string = env::current_exe()?.into_os_string();","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071143,"byte_end":11071200,"line_start":695,"line_end":695,"column_start":5,"column_end":62}},{"value":"/ let raw = RawOsStr::new(&os_string);","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071205,"byte_end":11071245,"line_start":696,"line_end":696,"column_start":5,"column_end":45}},{"value":"/ println!(\"{}\", raw.to_str_lossy());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071250,"byte_end":11071289,"line_start":697,"line_end":697,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071294,"byte_end":11071299,"line_start":698,"line_end":698,"column_start":5,"column_end":10}},{"value":"/ # Ok::<_, io::Error>(())","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071304,"byte_end":11071332,"line_start":699,"line_end":699,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071337,"byte_end":11071344,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071349,"byte_end":11071358,"line_start":701,"line_end":701,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071363,"byte_end":11071374,"line_start":702,"line_end":702,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071932,"byte_end":11071948,"line_start":723,"line_end":723,"column_start":12,"column_end":28},"name":"trim_end_matches","qualname":"<RawOsStr>::trim_end_matches","value":"pub fn trim_end_matches<P>(&Self, P) -> &Self where P: Pattern","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::trim_end_matches`].","sig":null,"attributes":[{"value":"/ Equivalent to [`str::trim_end_matches`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071476,"byte_end":11071520,"line_start":707,"line_end":707,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071525,"byte_end":11071528,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071533,"byte_end":11071545,"line_start":709,"line_end":709,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071550,"byte_end":11071553,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ Panics if the pattern is a byte outside of the ASCII range.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071558,"byte_end":11071621,"line_start":711,"line_end":711,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071626,"byte_end":11071629,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071634,"byte_end":11071648,"line_start":713,"line_end":713,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071653,"byte_end":11071656,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071661,"byte_end":11071668,"line_start":715,"line_end":715,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071673,"byte_end":11071704,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071709,"byte_end":11071712,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"111foo1bar111\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071717,"byte_end":11071767,"line_start":718,"line_end":718,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(\"111foo1bar\", raw.trim_end_matches(\"1\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071772,"byte_end":11071828,"line_start":719,"line_end":719,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(\"111foo1bar111\", raw.trim_end_matches(\"o\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071833,"byte_end":11071892,"line_start":720,"line_end":720,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071897,"byte_end":11071904,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11071909,"byte_end":11071920,"line_start":722,"line_end":722,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072537,"byte_end":11072555,"line_start":746,"line_end":746,"column_start":12,"column_end":30},"name":"trim_start_matches","qualname":"<RawOsStr>::trim_start_matches","value":"pub fn trim_start_matches<P>(&Self, P) -> &Self where P: Pattern","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`str::trim_start_matches`].","sig":null,"attributes":[{"value":"/ Equivalent to [`str::trim_start_matches`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072075,"byte_end":11072121,"line_start":730,"line_end":730,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072126,"byte_end":11072129,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072134,"byte_end":11072146,"line_start":732,"line_end":732,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072151,"byte_end":11072154,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ Panics if the pattern is a byte outside of the ASCII range.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072159,"byte_end":11072222,"line_start":734,"line_end":734,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072227,"byte_end":11072230,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072235,"byte_end":11072249,"line_start":736,"line_end":736,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072254,"byte_end":11072257,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072262,"byte_end":11072269,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072274,"byte_end":11072305,"line_start":739,"line_end":739,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072310,"byte_end":11072313,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ let raw = RawOsStr::from_str(\"111foo1bar111\");","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072318,"byte_end":11072368,"line_start":741,"line_end":741,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(\"foo1bar111\", raw.trim_start_matches(\"1\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072373,"byte_end":11072431,"line_start":742,"line_end":742,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(\"111foo1bar111\", raw.trim_start_matches(\"o\"));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072436,"byte_end":11072497,"line_start":743,"line_end":743,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072502,"byte_end":11072509,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072514,"byte_end":11072525,"line_start":745,"line_end":745,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":435},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074683,"byte_end":11074694,"line_start":835,"line_end":835,"column_start":12,"column_end":23},"name":"RawOsString","qualname":"::raw_str::RawOsString","value":"","parent":null,"children":[],"decl_id":null,"docs":" A container for the byte strings converted by [`OsStringBytes`].","sig":null,"attributes":[{"value":"/ A container for the byte strings converted by [`OsStringBytes`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074376,"byte_end":11074444,"line_start":828,"line_end":828,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074445,"byte_end":11074448,"line_start":829,"line_end":829,"column_start":1,"column_end":4}},{"value":"/ For more information, see [`RawOsStr`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074449,"byte_end":11074492,"line_start":830,"line_end":830,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074493,"byte_end":11074496,"line_start":831,"line_end":831,"column_start":1,"column_end":4}},{"value":"/ [unspecified encoding]: super#encoding","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074497,"byte_end":11074539,"line_start":832,"line_end":832,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075255,"byte_end":11075258,"line_start":858,"line_end":858,"column_start":12,"column_end":15},"name":"new","qualname":"<RawOsString>::new","value":"pub fn new(OsString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a platform-native string into a representation that can be\n more easily manipulated.","sig":null,"attributes":[{"value":"/ Converts a platform-native string into a representation that can be","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074729,"byte_end":11074800,"line_start":838,"line_end":838,"column_start":5,"column_end":76}},{"value":"/ more easily manipulated.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074805,"byte_end":11074833,"line_start":839,"line_end":839,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074838,"byte_end":11074841,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ For more information, see [`RawOsStr::new`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074846,"byte_end":11074894,"line_start":841,"line_end":841,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074899,"byte_end":11074902,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074907,"byte_end":11074921,"line_start":843,"line_end":843,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074926,"byte_end":11074929,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074934,"byte_end":11074941,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"/ use std::env;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074946,"byte_end":11074963,"line_start":846,"line_end":846,"column_start":5,"column_end":22}},{"value":"/ # use std::io;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074968,"byte_end":11074986,"line_start":847,"line_end":847,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074991,"byte_end":11074994,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ use os_str_bytes::RawOsString;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074999,"byte_end":11075033,"line_start":849,"line_end":849,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075038,"byte_end":11075041,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ let os_string = env::current_exe()?.into_os_string();","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075046,"byte_end":11075103,"line_start":851,"line_end":851,"column_start":5,"column_end":62}},{"value":"/ println!(\"{:?}\", RawOsString::new(os_string));","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075108,"byte_end":11075158,"line_start":852,"line_end":852,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075163,"byte_end":11075168,"line_start":853,"line_end":853,"column_start":5,"column_end":10}},{"value":"/ # Ok::<_, io::Error>(())","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075173,"byte_end":11075201,"line_start":854,"line_end":854,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075206,"byte_end":11075213,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075218,"byte_end":11075227,"line_start":856,"line_end":856,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075232,"byte_end":11075243,"line_start":857,"line_end":857,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075871,"byte_end":11075882,"line_start":880,"line_end":880,"column_start":12,"column_end":23},"name":"from_string","qualname":"<RawOsString>::from_string","value":"pub fn from_string(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps a string, without copying or encoding conversion.","sig":null,"attributes":[{"value":"/ Wraps a string, without copying or encoding conversion.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075334,"byte_end":11075393,"line_start":862,"line_end":862,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075398,"byte_end":11075401,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ This method is much more efficient than [`RawOsString::new`], since the","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075406,"byte_end":11075481,"line_start":864,"line_end":864,"column_start":5,"column_end":80}},{"value":"/ [encoding] used by this crate is compatible with UTF-8.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075486,"byte_end":11075545,"line_start":865,"line_end":865,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075550,"byte_end":11075553,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075558,"byte_end":11075572,"line_start":867,"line_end":867,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075577,"byte_end":11075580,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075585,"byte_end":11075592,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsString;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075597,"byte_end":11075631,"line_start":870,"line_end":870,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075636,"byte_end":11075639,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ let string = \"foobar\".to_owned();","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075644,"byte_end":11075681,"line_start":872,"line_end":872,"column_start":5,"column_end":42}},{"value":"/ let raw = RawOsString::from_string(string.clone());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075686,"byte_end":11075741,"line_start":873,"line_end":873,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(string, raw);","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075746,"byte_end":11075774,"line_start":874,"line_end":874,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075779,"byte_end":11075786,"line_start":875,"line_end":875,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075791,"byte_end":11075794,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ [encoding]: super#encoding","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075799,"byte_end":11075829,"line_start":877,"line_end":877,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075834,"byte_end":11075843,"line_start":878,"line_end":878,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075848,"byte_end":11075859,"line_start":879,"line_end":879,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076434,"byte_end":11076448,"line_start":902,"line_end":902,"column_start":12,"column_end":26},"name":"into_os_string","qualname":"<RawOsString>::into_os_string","value":"pub fn into_os_string(Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Converts this representation back to a platform-native string.","sig":null,"attributes":[{"value":"/ Converts this representation back to a platform-native string.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11075954,"byte_end":11076020,"line_start":884,"line_end":884,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076025,"byte_end":11076028,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076033,"byte_end":11076047,"line_start":886,"line_end":886,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076052,"byte_end":11076055,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076060,"byte_end":11076067,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ use std::env;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076072,"byte_end":11076089,"line_start":889,"line_end":889,"column_start":5,"column_end":22}},{"value":"/ # use std::io;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076094,"byte_end":11076112,"line_start":890,"line_end":890,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076117,"byte_end":11076120,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ use os_str_bytes::RawOsString;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076125,"byte_end":11076159,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076164,"byte_end":11076167,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ let os_string = env::current_exe()?.into_os_string();","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076172,"byte_end":11076229,"line_start":894,"line_end":894,"column_start":5,"column_end":62}},{"value":"/ let raw = RawOsString::new(os_string.clone());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076234,"byte_end":11076284,"line_start":895,"line_end":895,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(os_string, raw.into_os_string());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076289,"byte_end":11076337,"line_start":896,"line_end":896,"column_start":5,"column_end":53}},{"value":"/ #","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076342,"byte_end":11076347,"line_start":897,"line_end":897,"column_start":5,"column_end":10}},{"value":"/ # Ok::<_, io::Error>(())","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076352,"byte_end":11076380,"line_start":898,"line_end":898,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076385,"byte_end":11076392,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076397,"byte_end":11076406,"line_start":900,"line_end":900,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076411,"byte_end":11076422,"line_start":901,"line_end":901,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077193,"byte_end":11077205,"line_start":928,"line_end":928,"column_start":12,"column_end":24},"name":"into_raw_vec","qualname":"<RawOsString>::into_raw_vec","value":"pub fn into_raw_vec(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte string stored by this container.","sig":null,"attributes":[{"value":"/ Returns the byte string stored by this container.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076547,"byte_end":11076600,"line_start":906,"line_end":906,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076605,"byte_end":11076608,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ The result will match what would be returned by","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076613,"byte_end":11076664,"line_start":908,"line_end":908,"column_start":5,"column_end":56}},{"value":"/ [`OsStringBytes::into_raw_vec`] for the same string.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076669,"byte_end":11076725,"line_start":909,"line_end":909,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076730,"byte_end":11076733,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076738,"byte_end":11076752,"line_start":911,"line_end":911,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076757,"byte_end":11076760,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076765,"byte_end":11076772,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ use std::env;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076777,"byte_end":11076794,"line_start":914,"line_end":914,"column_start":5,"column_end":22}},{"value":"/ # use std::io;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076799,"byte_end":11076817,"line_start":915,"line_end":915,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076822,"byte_end":11076825,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ use os_str_bytes::OsStringBytes;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076830,"byte_end":11076866,"line_start":917,"line_end":917,"column_start":5,"column_end":41}},{"value":"/ use os_str_bytes::RawOsString;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076871,"byte_end":11076905,"line_start":918,"line_end":918,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076910,"byte_end":11076913,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ let os_string = env::current_exe()?.into_os_string();","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076918,"byte_end":11076975,"line_start":920,"line_end":920,"column_start":5,"column_end":62}},{"value":"/ let raw = RawOsString::new(os_string.clone());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11076980,"byte_end":11077030,"line_start":921,"line_end":921,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(os_string.into_raw_vec(), raw.into_raw_vec());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077035,"byte_end":11077096,"line_start":922,"line_end":922,"column_start":5,"column_end":66}},{"value":"/ #","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077101,"byte_end":11077106,"line_start":923,"line_end":923,"column_start":5,"column_end":10}},{"value":"/ # Ok::<_, io::Error>(())","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077111,"byte_end":11077139,"line_start":924,"line_end":924,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077144,"byte_end":11077151,"line_start":925,"line_end":925,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077156,"byte_end":11077165,"line_start":926,"line_end":926,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077170,"byte_end":11077181,"line_start":927,"line_end":927,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077580,"byte_end":11077591,"line_start":944,"line_end":944,"column_start":12,"column_end":23},"name":"into_string","qualname":"<RawOsString>::into_string","value":"pub fn into_string(Self) -> Result<String, Self>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`OsString::into_string`].","sig":null,"attributes":[{"value":"/ Equivalent to [`OsString::into_string`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077251,"byte_end":11077295,"line_start":932,"line_end":932,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077300,"byte_end":11077303,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077308,"byte_end":11077322,"line_start":934,"line_end":934,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077327,"byte_end":11077330,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077335,"byte_end":11077342,"line_start":936,"line_end":936,"column_start":5,"column_end":12}},{"value":"/ use os_str_bytes::RawOsString;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077347,"byte_end":11077381,"line_start":937,"line_end":937,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077386,"byte_end":11077389,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ let string = \"foobar\".to_owned();","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077394,"byte_end":11077431,"line_start":939,"line_end":939,"column_start":5,"column_end":42}},{"value":"/ let raw = RawOsString::from_string(string.clone());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077436,"byte_end":11077491,"line_start":940,"line_end":940,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(Ok(string), raw.into_string());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077496,"byte_end":11077542,"line_start":941,"line_end":941,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077547,"byte_end":11077554,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077559,"byte_end":11077568,"line_start":943,"line_end":943,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8229,"byte_end":8242,"line_start":223,"line_end":223,"column_start":12,"column_end":25},"name":"EncodingError","qualname":"::EncodingError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error that occurs when a byte sequence is not representable in the\n platform encoding.","sig":null,"attributes":[{"value":"/ The error that occurs when a byte sequence is not representable in the","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7393,"byte_end":7467,"line_start":206,"line_end":206,"column_start":1,"column_end":75}},{"value":"/ platform encoding.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7468,"byte_end":7490,"line_start":207,"line_end":207,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7491,"byte_end":7494,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ [`Result::unwrap`] should almost always be called on results containing","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7495,"byte_end":7570,"line_start":209,"line_end":209,"column_start":1,"column_end":76}},{"value":"/ this error. It should be known whether or not byte sequences are properly","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7571,"byte_end":7648,"line_start":210,"line_end":210,"column_start":1,"column_end":78}},{"value":"/ encoded for the platform, since [the module-level documentation][encoding]","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7649,"byte_end":7727,"line_start":211,"line_end":211,"column_start":1,"column_end":79}},{"value":"/ discourages using encoded bytes in interchange. Results are returned","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7728,"byte_end":7800,"line_start":212,"line_end":212,"column_start":1,"column_end":73}},{"value":"/ primarily to make panicking behavior explicit.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7801,"byte_end":7851,"line_start":213,"line_end":213,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7852,"byte_end":7855,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ On Unix, this error is never returned, but [`OsStrExt`] or [`OsStringExt`]","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7856,"byte_end":7934,"line_start":215,"line_end":215,"column_start":1,"column_end":79}},{"value":"/ should be used instead if that needs to be guaranteed.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7935,"byte_end":7993,"line_start":216,"line_end":216,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7994,"byte_end":7997,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ [encoding]: self#encoding","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7998,"byte_end":8027,"line_start":218,"line_end":218,"column_start":1,"column_end":30}},{"value":"/ [`OsStrExt`]: ::std::os::unix::ffi::OsStrExt","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8028,"byte_end":8076,"line_start":219,"line_end":219,"column_start":1,"column_end":49}},{"value":"/ [`OsStringExt`]: ::std::os::unix::ffi::OsStringExt","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8077,"byte_end":8131,"line_start":220,"line_end":220,"column_start":1,"column_end":55}},{"value":"/ [`Result::unwrap`]: ::std::result::Result::unwrap","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8132,"byte_end":8185,"line_start":221,"line_end":221,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":76},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8709,"byte_end":8719,"line_start":242,"line_end":242,"column_start":11,"column_end":21},"name":"OsStrBytes","qualname":"::OsStrBytes","value":"OsStrBytes: private::Sealed + ToOwned","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":80}],"decl_id":null,"docs":" A platform agnostic variant of [`OsStrExt`].","sig":null,"attributes":[{"value":"/ A platform agnostic variant of [`OsStrExt`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8502,"byte_end":8550,"line_start":236,"line_end":236,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8551,"byte_end":8554,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ For more information, see [the module-level documentation][module].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8555,"byte_end":8626,"line_start":238,"line_end":238,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8627,"byte_end":8630,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ [module]: self","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8631,"byte_end":8649,"line_start":240,"line_end":240,"column_start":1,"column_end":19}},{"value":"/ [`OsStrExt`]: ::std::os::unix::ffi::OsStrExt","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8650,"byte_end":8698,"line_start":241,"line_end":241,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9482,"byte_end":9496,"line_start":269,"line_end":269,"column_start":8,"column_end":22},"name":"from_raw_bytes","qualname":"::OsStrBytes::from_raw_bytes","value":"pub fn from_raw_bytes<'a, S>(S) -> Result<Cow> where S: Into<Cow>","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Converts a byte slice into an equivalent platform-native string.","sig":null,"attributes":[{"value":"/ Converts a byte slice into an equivalent platform-native string.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8753,"byte_end":8821,"line_start":243,"line_end":243,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8826,"byte_end":8829,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Provided byte strings should always be valid for the [unspecified","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8834,"byte_end":8903,"line_start":245,"line_end":245,"column_start":5,"column_end":74}},{"value":"/ encoding] used by this crate.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8908,"byte_end":8941,"line_start":246,"line_end":246,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8946,"byte_end":8949,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8954,"byte_end":8966,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8971,"byte_end":8974,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ See documentation for [`EncodingError`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8979,"byte_end":9023,"line_start":250,"line_end":250,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9028,"byte_end":9031,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9036,"byte_end":9050,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9055,"byte_end":9058,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9063,"byte_end":9070,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use std::env;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9075,"byte_end":9092,"line_start":255,"line_end":255,"column_start":5,"column_end":22}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9097,"byte_end":9121,"line_start":256,"line_end":256,"column_start":5,"column_end":29}},{"value":"/ # use std::io;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9126,"byte_end":9144,"line_start":257,"line_end":257,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9149,"byte_end":9152,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ use os_str_bytes::OsStrBytes;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9157,"byte_end":9190,"line_start":259,"line_end":259,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9195,"byte_end":9198,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let os_string = env::current_exe()?;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9203,"byte_end":9243,"line_start":261,"line_end":261,"column_start":5,"column_end":45}},{"value":"/ let os_bytes = os_string.to_raw_bytes();","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9248,"byte_end":9292,"line_start":262,"line_end":262,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(os_string, OsStr::from_raw_bytes(os_bytes).unwrap());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9297,"byte_end":9365,"line_start":263,"line_end":263,"column_start":5,"column_end":73}},{"value":"/ #","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9370,"byte_end":9375,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ # Ok::<_, io::Error>(())","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9380,"byte_end":9408,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9413,"byte_end":9420,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9425,"byte_end":9428,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ [unspecified encoding]: self#encoding","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9433,"byte_end":9474,"line_start":268,"line_end":268,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":10109,"byte_end":10121,"line_start":293,"line_end":293,"column_start":8,"column_end":20},"name":"to_raw_bytes","qualname":"::OsStrBytes::to_raw_bytes","value":"pub fn to_raw_bytes(&Self) -> Cow<, [u8]>","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Converts a platform-native string into an equivalent byte slice.","sig":null,"attributes":[{"value":"/ Converts a platform-native string into an equivalent byte slice.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9587,"byte_end":9655,"line_start":273,"line_end":273,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9660,"byte_end":9663,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ The returned bytes string will use an [unspecified encoding].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9668,"byte_end":9733,"line_start":275,"line_end":275,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9738,"byte_end":9741,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9746,"byte_end":9760,"line_start":277,"line_end":277,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9765,"byte_end":9768,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9773,"byte_end":9780,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ use std::env;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9785,"byte_end":9802,"line_start":280,"line_end":280,"column_start":5,"column_end":22}},{"value":"/ # use std::io;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9807,"byte_end":9825,"line_start":281,"line_end":281,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9830,"byte_end":9833,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ use os_str_bytes::OsStrBytes;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9838,"byte_end":9871,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9876,"byte_end":9879,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let os_string = env::current_exe()?;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9884,"byte_end":9924,"line_start":285,"line_end":285,"column_start":5,"column_end":45}},{"value":"/ println!(\"{:?}\", os_string.to_raw_bytes());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9929,"byte_end":9976,"line_start":286,"line_end":286,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9981,"byte_end":9986,"line_start":287,"line_end":287,"column_start":5,"column_end":10}},{"value":"/ # Ok::<_, io::Error>(())","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":9991,"byte_end":10019,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":10024,"byte_end":10031,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":10036,"byte_end":10039,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ [unspecified encoding]: self#encoding","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":10044,"byte_end":10085,"line_start":291,"line_end":291,"column_start":5,"column_end":46}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":10090,"byte_end":10101,"line_start":292,"line_end":292,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":92},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11410,"byte_end":11423,"line_start":342,"line_end":342,"column_start":11,"column_end":24},"name":"OsStringBytes","qualname":"::OsStringBytes","value":"OsStringBytes: private::Sealed + Sized","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":" A platform agnostic variant of [`OsStringExt`].","sig":null,"attributes":[{"value":"/ A platform agnostic variant of [`OsStringExt`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11194,"byte_end":11245,"line_start":336,"line_end":336,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11246,"byte_end":11249,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ For more information, see [the module-level documentation][module].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11250,"byte_end":11321,"line_start":338,"line_end":338,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11322,"byte_end":11325,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ [module]: self","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11326,"byte_end":11344,"line_start":340,"line_end":340,"column_start":1,"column_end":19}},{"value":"/ [`OsStringExt`]: ::std::os::unix::ffi::OsStringExt","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11345,"byte_end":11399,"line_start":341,"line_end":341,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12200,"byte_end":12212,"line_start":369,"line_end":369,"column_start":8,"column_end":20},"name":"from_raw_vec","qualname":"::OsStringBytes::from_raw_vec","value":"pub fn from_raw_vec(Vec<u8>) -> Result<Self>","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" Converts a byte vector into an equivalent platform-native string.","sig":null,"attributes":[{"value":"/ Converts a byte vector into an equivalent platform-native string.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11455,"byte_end":11524,"line_start":343,"line_end":343,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11529,"byte_end":11532,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Provided byte strings should always be valid for the [unspecified","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11537,"byte_end":11606,"line_start":345,"line_end":345,"column_start":5,"column_end":74}},{"value":"/ encoding] used by this crate.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11611,"byte_end":11644,"line_start":346,"line_end":346,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11649,"byte_end":11652,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11657,"byte_end":11669,"line_start":348,"line_end":348,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11674,"byte_end":11677,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ See documentation for [`EncodingError`].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11682,"byte_end":11726,"line_start":350,"line_end":350,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11731,"byte_end":11734,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11739,"byte_end":11753,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11758,"byte_end":11761,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11766,"byte_end":11773,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ use std::env;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11778,"byte_end":11795,"line_start":355,"line_end":355,"column_start":5,"column_end":22}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11800,"byte_end":11827,"line_start":356,"line_end":356,"column_start":5,"column_end":32}},{"value":"/ # use std::io;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11832,"byte_end":11850,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11855,"byte_end":11858,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ use os_str_bytes::OsStringBytes;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11863,"byte_end":11899,"line_start":359,"line_end":359,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11904,"byte_end":11907,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ let os_string = env::current_exe()?;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11912,"byte_end":11952,"line_start":361,"line_end":361,"column_start":5,"column_end":45}},{"value":"/ let os_bytes = os_string.clone().into_raw_vec();","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11957,"byte_end":12009,"line_start":362,"line_end":362,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(os_string, OsString::from_raw_vec(os_bytes).unwrap());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12014,"byte_end":12083,"line_start":363,"line_end":363,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12088,"byte_end":12093,"line_start":364,"line_end":364,"column_start":5,"column_end":10}},{"value":"/ # Ok::<_, io::Error>(())","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12098,"byte_end":12126,"line_start":365,"line_end":365,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12131,"byte_end":12138,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12143,"byte_end":12146,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ [unspecified encoding]: self#encoding","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12151,"byte_end":12192,"line_start":368,"line_end":368,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12777,"byte_end":12789,"line_start":391,"line_end":391,"column_start":8,"column_end":20},"name":"into_raw_vec","qualname":"::OsStringBytes::into_raw_vec","value":"pub fn into_raw_vec(Self) -> Vec<u8>","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" Converts a platform-native string into an equivalent byte vector.","sig":null,"attributes":[{"value":"/ Converts a platform-native string into an equivalent byte vector.","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12252,"byte_end":12321,"line_start":371,"line_end":371,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12326,"byte_end":12329,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The returned byte string will use an [unspecified encoding].","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12334,"byte_end":12398,"line_start":373,"line_end":373,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12403,"byte_end":12406,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12411,"byte_end":12425,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12430,"byte_end":12433,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12438,"byte_end":12445,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ use std::env;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12450,"byte_end":12467,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/ # use std::io;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12472,"byte_end":12490,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12495,"byte_end":12498,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use os_str_bytes::OsStringBytes;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12503,"byte_end":12539,"line_start":381,"line_end":381,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12544,"byte_end":12547,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let os_string = env::current_exe()?;","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12552,"byte_end":12592,"line_start":383,"line_end":383,"column_start":5,"column_end":45}},{"value":"/ println!(\"{:?}\", os_string.into_raw_vec());","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12597,"byte_end":12644,"line_start":384,"line_end":384,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12649,"byte_end":12654,"line_start":385,"line_end":385,"column_start":5,"column_end":10}},{"value":"/ # Ok::<_, io::Error>(())","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12659,"byte_end":12687,"line_start":386,"line_end":386,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12692,"byte_end":12699,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12704,"byte_end":12707,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ [unspecified encoding]: self#encoding","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12712,"byte_end":12753,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"must_use","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12758,"byte_end":12769,"line_start":390,"line_end":390,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":114},"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":13490,"byte_end":13496,"line_start":424,"line_end":424,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11049101,"byte_end":11049106,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11049868,"byte_end":11049873,"line_start":59,"line_end":59,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11050070,"byte_end":11050075,"line_start":68,"line_end":68,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11050352,"byte_end":11050357,"line_start":84,"line_end":84,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11050553,"byte_end":11050558,"line_start":97,"line_end":97,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11050928,"byte_end":11050933,"line_start":113,"line_end":113,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051138,"byte_end":11051149,"line_start":13,"line_end":13,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056158,"byte_end":11056166,"line_start":120,"line_end":120,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072701,"byte_end":11072709,"line_start":754,"line_end":754,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072928,"byte_end":11072934,"line_start":768,"line_end":768,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11073164,"byte_end":11073167,"line_start":782,"line_end":782,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074232,"byte_end":11074240,"line_start":819,"line_end":819,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074711,"byte_end":11074722,"line_start":837,"line_end":837,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077726,"byte_end":11077737,"line_start":949,"line_end":949,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077838,"byte_end":11077849,"line_start":956,"line_end":956,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077939,"byte_end":11077950,"line_start":963,"line_end":963,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11078118,"byte_end":11078129,"line_start":972,"line_end":972,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11078252,"byte_end":11078255,"line_start":979,"line_end":979,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11078858,"byte_end":11078864,"line_start":1007,"line_end":1007,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8282,"byte_end":8295,"line_start":225,"line_end":225,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8432,"byte_end":8445,"line_start":232,"line_end":232,"column_start":16,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":10170,"byte_end":10175,"line_start":296,"line_end":296,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":10717,"byte_end":10721,"line_start":318,"line_end":318,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12834,"byte_end":12842,"line_start":394,"line_end":394,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":13107,"byte_end":13114,"line_start":406,"line_end":406,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":13548,"byte_end":13553,"line_start":426,"line_end":426,"column_start":21,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":13577,"byte_end":13585,"line_start":427,"line_end":427,"column_start":21,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":13609,"byte_end":13613,"line_start":428,"line_end":428,"column_start":21,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":13637,"byte_end":13644,"line_start":429,"line_end":429,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":7253,"byte_end":7257,"line_start":196,"line_end":196,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":134}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11049101,"byte_end":11049106,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11049868,"byte_end":11049873,"line_start":59,"line_end":59,"column_start":33,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":7766}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11050070,"byte_end":11050075,"line_start":68,"line_end":68,"column_start":26,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11050352,"byte_end":11050357,"line_start":84,"line_end":84,"column_start":19,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11050553,"byte_end":11050558,"line_start":97,"line_end":97,"column_start":19,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/iter.rs","byte_start":11050928,"byte_end":11050933,"line_start":113,"line_end":113,"column_start":27,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":8187}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051138,"byte_end":11051149,"line_start":13,"line_end":13,"column_start":18,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":394},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/pattern.rs","byte_start":11051798,"byte_end":11051804,"line_start":36,"line_end":36,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":114},"to":{"krate":0,"index":196}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11056158,"byte_end":11056166,"line_start":120,"line_end":120,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072701,"byte_end":11072709,"line_start":754,"line_end":754,"column_start":22,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11072928,"byte_end":11072934,"line_start":768,"line_end":768,"column_start":26,"column_end":32},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":7626},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11073164,"byte_end":11073167,"line_start":782,"line_end":782,"column_start":33,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":672},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074232,"byte_end":11074240,"line_start":819,"line_end":819,"column_start":18,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":400},"to":{"krate":5,"index":663}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11074711,"byte_end":11074722,"line_start":837,"line_end":837,"column_start":6,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077726,"byte_end":11077737,"line_start":949,"line_end":949,"column_start":26,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077838,"byte_end":11077849,"line_start":956,"line_end":956,"column_start":27,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2623}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11077939,"byte_end":11077950,"line_start":963,"line_end":963,"column_start":16,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11078118,"byte_end":11078129,"line_start":972,"line_end":972,"column_start":23,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11078252,"byte_end":11078255,"line_start":979,"line_end":979,"column_start":28,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":672},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/raw_str.rs","byte_start":11078858,"byte_end":11078864,"line_start":1007,"line_end":1007,"column_start":16,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8282,"byte_end":8295,"line_start":225,"line_end":225,"column_start":18,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8432,"byte_end":8445,"line_start":232,"line_end":232,"column_start":16,"column_end":29},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":510},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8730,"byte_end":8736,"line_start":242,"line_end":242,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":114},"to":{"krate":0,"index":76}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":8739,"byte_end":8746,"line_start":242,"line_end":242,"column_start":41,"column_end":48},"kind":"SuperTrait","from":{"krate":5,"index":663},"to":{"krate":0,"index":76}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":10170,"byte_end":10175,"line_start":296,"line_end":296,"column_start":21,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":1,"index":2955},"to":{"krate":0,"index":76}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":10717,"byte_end":10721,"line_start":318,"line_end":318,"column_start":21,"column_end":25},"kind":{"Impl":{"id":39}},"from":{"krate":1,"index":7186},"to":{"krate":0,"index":76}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11434,"byte_end":11440,"line_start":342,"line_end":342,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":114},"to":{"krate":0,"index":92}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":11443,"byte_end":11448,"line_start":342,"line_end":342,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":92}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":12834,"byte_end":12842,"line_start":394,"line_end":394,"column_start":24,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":1,"index":2952},"to":{"krate":0,"index":92}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":13107,"byte_end":13114,"line_start":406,"line_end":406,"column_start":24,"column_end":31},"kind":{"Impl":{"id":41}},"from":{"krate":1,"index":7077},"to":{"krate":0,"index":92}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":13548,"byte_end":13553,"line_start":426,"line_end":426,"column_start":21,"column_end":26},"kind":{"Impl":{"id":43}},"from":{"krate":1,"index":2955},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":13577,"byte_end":13585,"line_start":427,"line_end":427,"column_start":21,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":1,"index":2952},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":13609,"byte_end":13613,"line_start":428,"line_end":428,"column_start":21,"column_end":25},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":7186},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/kong/.cargo/registry/src/github.com-1ecc6299db9ec823/os_str_bytes-6.1.0/src/lib.rs","byte_start":13637,"byte_end":13644,"line_start":429,"line_end":429,"column_start":21,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":1,"index":7077},"to":{"krate":0,"index":114}}]}